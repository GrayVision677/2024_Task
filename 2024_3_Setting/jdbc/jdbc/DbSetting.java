package jdbc;

public class DbSetting {

	private DbManager db;

	public DbSetting() {
		// TODO Auto-generated constructor stub
		db = new DbManager();
		
		try {
			db.setDb("-- MySQL Script generated by MySQL Workbench\r\n"
					+ "-- Thu Mar 14 14:33:00 2024\r\n"
					+ "-- Model: New Model    Version: 1.0\r\n"
					+ "-- MySQL Workbench Forward Engineering\r\n"
					+ "\r\n"
					+ "SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;\r\n"
					+ "SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;\r\n"
					+ "SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Schema auction\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "DROP SCHEMA IF EXISTS `auction` ;\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Schema auction\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE SCHEMA IF NOT EXISTS `auction` DEFAULT CHARACTER SET utf8 ;\r\n"
					+ "USE `auction` ;\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`question`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`question` (\r\n"
					+ "  `q_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `q_ask` VARCHAR(100) NULL,\r\n"
					+ "  PRIMARY KEY (`q_no`))\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`user`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`user` (\r\n"
					+ "  `u_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `u_id` VARCHAR(10) NULL,\r\n"
					+ "  `u_pw` VARCHAR(30) NULL,\r\n"
					+ "  `q_no` INT NULL,\r\n"
					+ "  `u_answer` VARCHAR(100) NULL,\r\n"
					+ "  PRIMARY KEY (`u_no`),\r\n"
					+ "  INDEX `fk_user_question_idx` (`q_no` ASC) VISIBLE,\r\n"
					+ "  CONSTRAINT `fk_user_question`\r\n"
					+ "    FOREIGN KEY (`q_no`)\r\n"
					+ "    REFERENCES `auction`.`question` (`q_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION)\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`area`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`area` (\r\n"
					+ "  `ar_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `ar_name` VARCHAR(50) NULL,\r\n"
					+ "  PRIMARY KEY (`ar_no`))\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`building`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`building` (\r\n"
					+ "  `b_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `b_name` VARCHAR(30) NULL,\r\n"
					+ "  `b_price` VARCHAR(15) NULL,\r\n"
					+ "  `b_date` VARCHAR(13) NULL,\r\n"
					+ "  `b_type` INT NULL,\r\n"
					+ "  `b_x` INT NULL,\r\n"
					+ "  `b_y` INT NULL,\r\n"
					+ "  `a_no` INT NULL,\r\n"
					+ "  `b_count` INT NULL,\r\n"
					+ "  PRIMARY KEY (`b_no`),\r\n"
					+ "  INDEX `fk_building_area1_idx` (`a_no` ASC) VISIBLE,\r\n"
					+ "  CONSTRAINT `fk_building_area1`\r\n"
					+ "    FOREIGN KEY (`a_no`)\r\n"
					+ "    REFERENCES `auction`.`area` (`ar_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION)\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`interest`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`interest` (\r\n"
					+ "  `i_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `u_no` INT NULL,\r\n"
					+ "  `b_no` INT NULL,\r\n"
					+ "  PRIMARY KEY (`i_no`),\r\n"
					+ "  INDEX `fk_interest_user1_idx` (`u_no` ASC) VISIBLE,\r\n"
					+ "  INDEX `fk_interest_building1_idx` (`b_no` ASC) VISIBLE,\r\n"
					+ "  CONSTRAINT `fk_interest_user1`\r\n"
					+ "    FOREIGN KEY (`u_no`)\r\n"
					+ "    REFERENCES `auction`.`user` (`u_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION,\r\n"
					+ "  CONSTRAINT `fk_interest_building1`\r\n"
					+ "    FOREIGN KEY (`b_no`)\r\n"
					+ "    REFERENCES `auction`.`building` (`b_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION)\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`auction`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`auction` (\r\n"
					+ "  `a_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `b_no` INT NULL,\r\n"
					+ "  `u_no` INT NULL,\r\n"
					+ "  `a_date` VARCHAR(13) NULL,\r\n"
					+ "  PRIMARY KEY (`a_no`),\r\n"
					+ "  INDEX `fk_auction_user1_idx` (`u_no` ASC) VISIBLE,\r\n"
					+ "  INDEX `fk_auction_building1_idx` (`b_no` ASC) VISIBLE,\r\n"
					+ "  CONSTRAINT `fk_auction_user1`\r\n"
					+ "    FOREIGN KEY (`u_no`)\r\n"
					+ "    REFERENCES `auction`.`user` (`u_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION,\r\n"
					+ "  CONSTRAINT `fk_auction_building1`\r\n"
					+ "    FOREIGN KEY (`b_no`)\r\n"
					+ "    REFERENCES `auction`.`building` (`b_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION)\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "-- Table `auction`.`look`\r\n"
					+ "-- -----------------------------------------------------\r\n"
					+ "CREATE TABLE IF NOT EXISTS `auction`.`look` (\r\n"
					+ "  `l_no` INT NOT NULL AUTO_INCREMENT,\r\n"
					+ "  `b_no` INT NULL,\r\n"
					+ "  `u_no` INT NULL,\r\n"
					+ "  PRIMARY KEY (`l_no`),\r\n"
					+ "  INDEX `fk_look_user1_idx` (`u_no` ASC) VISIBLE,\r\n"
					+ "  INDEX `fk_look_building1_idx` (`b_no` ASC) VISIBLE,\r\n"
					+ "  CONSTRAINT `fk_look_user1`\r\n"
					+ "    FOREIGN KEY (`u_no`)\r\n"
					+ "    REFERENCES `auction`.`user` (`u_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION,\r\n"
					+ "  CONSTRAINT `fk_look_building1`\r\n"
					+ "    FOREIGN KEY (`b_no`)\r\n"
					+ "    REFERENCES `auction`.`building` (`b_no`)\r\n"
					+ "    ON DELETE NO ACTION\r\n"
					+ "    ON UPDATE NO ACTION)\r\n"
					+ "ENGINE = InnoDB;\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "SET SQL_MODE=@OLD_SQL_MODE;\r\n"
					+ "SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;\r\n"
					+ "SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;\r\n"
					+ "set foreign_key_checks = 0;"
					+ "set global local_infile = 1;"
					+ "load data local infile './datafiles/area.txt' into table area lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/question.txt' into table question lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/user.txt' into table user lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/building.txt' into table building lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/interest.txt' into table interest lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/auction.txt' into table auction lines terminated by '\r\n' ignore 1 lines;"
					+ "load data local infile './datafiles/look.txt' into table look lines terminated by '\r\n' ignore 1 lines;"
					+ "drop user if exists 'user'@'localhost';\r\n"
					+ "create user 'user'@'localhost' identified by '1234';\r\n"
					+ "grant select, insert, delete, update on auction.* to 'user'@'localhost';"
					);
			
			Msg.Info("셋팅성공");
		} catch (Exception e) {
			// TODO: handle exception
			e.printStackTrace();
			Msg.error("셋팅 실패");
		}
	}

}
